apply plugin: 'com.android.application'

android {
    apply from: "../variables.gradle"
    namespace "com.liaisonlegale.app"
    compileSdk project.hasProperty('compileSdkVersion') ? project.compileSdkVersion : 34

    defaultConfig {
        applicationId "com.liaisonlegale.app"
        minSdk project.hasProperty('minSdkVersion') ? project.minSdkVersion : 22
        targetSdk project.hasProperty('targetSdkVersion') ? project.targetSdkVersion : 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.toVersion(project.hasProperty('javaVersion') ? project.javaVersion : '17')
        targetCompatibility JavaVersion.toVersion(project.hasProperty('javaVersion') ? project.javaVersion : '17')
    }

    kotlinOptions {
        jvmTarget = project.hasProperty('javaVersion') ? project.javaVersion : '17'
    }

    lintOptions {
        abortOnError false
    }

    buildFeatures {
        // Determines whether to generate a BuildConfig class.
        buildConfig = false
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-android')
}

apply from: "$rootDir/capacitor.build.gradle"

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.exists()) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, skipping google-services plugin")
}
